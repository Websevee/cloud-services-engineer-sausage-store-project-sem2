name: Sausage Store Deploy

on:
  push:
    branches:
      - main

env:
  NEXUS_HELM_REPO: ${{ secrets.NEXUS_HELM_REPO }}
  NEXUS_HELM_REPO_USER: ${{ secrets.NEXUS_HELM_REPO_USER }}
  NEXUS_HELM_REPO_PASSWORD: ${{ secrets.NEXUS_HELM_REPO_PASSWORD }}
  SAUSAGE_STORE_NAMESPACE: ${{ secrets.SAUSAGE_STORE_NAMESPACE }}
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  # VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}

jobs:
  # Сборка и пуш образов в докерхаб:
  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        # Получение исходного кода из репозитория:
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        # Установка сборщика контейнеров Docker:
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        # Авторизация на Docker Hub:
        uses: docker/login-action@v2
        # При помощи with передаём в action параметры username и password:
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          # Хорошо ли держать логин и пароль прямо в коде workflow?
          # Нет, это нехорошо. Хранить пароль надо в Secrets.
      - name: Push Backend to DockerHub
        # Одновременный билд и пуш образа в Docker Hub:
        uses: docker/build-push-action@v4
        with:
          # Параметр context: ./backend/ указывает, что нужный Dockerfile
          # находится в ./backend/
          context: ./backend/
          # Параметр push: true указывает, что образ нужно не только собрать,
          # но и отправить на Docker Hub:
          push: true
          # В параметре tags задаётся название и тег для образа.
          # Для каждого пересобранного образа
          # устанавливаем тег latest, чтобы потом
          # на сервере и в docker-compose.yml не указывать версию образа:
          tags: ${{ secrets.DOCKER_USER }}/sausage-backend:latest
          build-args: |
            VERSION=${{ github.sha }}
      - name: Push Frontend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USER }}/sausage-frontend:latest
      - name: Push Backend-report to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend-report/
          push: true
          tags: ${{ secrets.DOCKER_USER }}/sausage-backend-report:latest

  # Упаковываем helm-чарт и пушим его в Nexus
  add_helm_chart_to_nexus:
    name: Add Helm Chart To Nexus
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Install helm-cm-push plugin
        run: helm plugin install https://github.com/chartmuseum/helm-push

      - name: Add Nexus Helm repository
        run: |
          helm repo add nexus ${{ env.NEXUS_HELM_REPO }} --username ${{ env.NEXUS_HELM_REPO_USER }} --password ${{ env.NEXUS_HELM_REPO_PASSWORD }}
          helm repo update

      - name: Set chart version with commit hash
        id: set_version
        run: |
          # Use commit hash as part of version to ensure uniqueness
          COMMIT_HASH=$(echo ${{ github.sha }} | cut -c1-8)
          VERSION="0.1.0-$COMMIT_HASH"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Generated version: $VERSION"

      - name: Update chart versions
        run: |
          # Update main chart version
          sed -i "s/version: .*/version: ${{ env.VERSION }}/g" sausage-store-chart/Chart.yaml

          # Update dependency versions
          sed -i "s/    version: .*/    version: ${{ env.VERSION }}/g" sausage-store-chart/Chart.yaml

      - name: Update subchart versions
        run: |
          # Update versions in all subcharts
          for chart in backend backend-report frontend infra; do
            if [ -f "sausage-store-chart/charts/$chart/Chart.yaml" ]; then
              sed -i "s/version: .*/version: ${{ env.VERSION }}/g" sausage-store-chart/charts/$chart/Chart.yaml
            fi
          done

      - name: Helm package chart
        run: |
          helm dependency update sausage-store-chart
          helm package sausage-store-chart

      - name: Helm push chart to Nexus
        run: |
          helm cm-push sausage-store-*.tgz ${{ env.NEXUS_HELM_REPO }} \
            --username="${{ env.NEXUS_HELM_REPO_USER }}" \
            --password="${{ env.NEXUS_HELM_REPO_PASSWORD }}" \
            --context-path="/repository/websevee-sem2-final-project"

  # Деплоим приложения в кластер Kubernetes с помощью helm-чарт
  deploy_helm_chart_to_kubernetes:
    name: Deploy Helm Chart To Kubernetes
    runs-on: ubuntu-latest
    needs: add_helm_chart_to_nexus

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.24.0"

      - name: Add Nexus Helm repository
        run: |
          helm repo add nexus ${{ env.NEXUS_HELM_REPO }} --username ${{ env.NEXUS_HELM_REPO_USER }} --password ${{ env.NEXUS_HELM_REPO_PASSWORD }}
          helm repo update

      - name: Configure Kubernetes context
        run: |
          mkdir -p ~/.kube
          echo "${KUBE_CONFIG}" | base64 --decode > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Deploy Helm chart
        run: |
          helm upgrade --install sausage-store nexus/sausage-store \
            --namespace ${{ env.SAUSAGE_STORE_NAMESPACE }}
