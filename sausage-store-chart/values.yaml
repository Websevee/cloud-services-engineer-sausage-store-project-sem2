global:
  imagePullPolicy: Always
  ###vault:
  ###  host: ip
  ###  name: vault
  ###  vaultToken: someToken


frontend:
### В чарте frontend отсутствуют некоторые важные файлы. Поймите какие и опишите их.
  replicas: 1
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  service:
    port: 80
  ingress:
    host: front-websevee.2sem.students-projects.ru # Корректный домен будет указан в задании
    path: /
    pathType: Prefix
    tlsSecretName: 2sem-students-projects-wildcard-secret
  containerPort: 80
  image: websevee/sausage-frontend:latest
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "1"
  nginxConf: nginx.conf

backend:
  annotations:
    path: /actuator/prometheus
    port: "8080"
    scrape: "true"
  env:
    postgresUri: jdbc:postgresql://postgresql:5432/sausage-store
    postgresUser: store
    postgresPassword: storepassword
    reportPath: /logs/reports
    logPath: /logs
  service:
    port: 8080
  revisionHistoryLimit: 15
  replicas: 1
  strategy:
  ### Опишите стратегию RollingUpdate для бэкенда
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  image: websevee/sausage-backend:latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "1"
  containerPort: 8080
  livenessProbe:
  ### Опишите LivenessProbe для бэкенда
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
  vpa:
  ### Опишите VPA для бэкенда
    updatePolicy:
      updateMode: "Auto"
    resourcePolicy:
      containerPolicies:
        - containerName: "backend"
          minAllowed:
            memory: "256Mi"
            cpu: "100m"            
          maxAllowed:
            memory: "512Mi"
            cpu: "1"

backend-report:
### Опишите значения для backend-report
### Приложение должно использовать стратегию Recreate
### Приложение использует переменную PORT - порт, на котором оно запустится и DB - Uri-подключение к mongodb. 
### DB положите в Secret, PORT в ConfigMap
### Опишите HPA для backend-report
  env:
    PORT: 8080
    DB: mongodb://reports:reportspassword@mongodb:27017/sausage-store
    MONGO_REPORTS_DATABASE: sausage-store
    MONGO_REPORTS_USERNAME: reports
    MONGO_REPORTS_PASSWORD: reportspassword
  service:
    port: 8080
  revisionHistoryLimit: 15
  replicas: 1
  strategy:
    type: Recreate
  image: websevee/sausage-backend-report:latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: "128Mi"
      cpu: "0.1"
    limits:
      memory: "256Mi"
      cpu: "0.5"
  containerPort: 8080
  livenessProbe:
    httpGet:
      path: /health
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
  hpa:
    minReplicas: 1
    maxReplicas: 5
    metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70

infra:
  postgresql:
    env:
      POSTGRES_DB: sausage-store
      POSTGRES_USER: store
      POSTGRES_PASSWORD: storepassword
    containerPort: 5432
  mongodb:
    env:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_REPORTS_DATABASE: sausage-store
      MONGO_REPORTS_USERNAME: reports
      MONGO_REPORTS_PASSWORD: reportspassword
    containerPort: 27017
